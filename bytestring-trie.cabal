Cabal-Version:  >= 2.0
Build-Type:     Simple

Name:           bytestring-trie
Version:        0.3.0
Stability:      provisional
Homepage:       http://github.com/netom/bytestring-trie
Author:         wren gayle romano
Maintainer:     wren@community.haskell.org
Copyright:      Copyright (c) 2008--2014 wren gayle romano
License:        BSD3
License-File:   LICENSE

Category:       Data, Data Structures
Synopsis:       An efficient finite map from (byte)strings to values.
Description:    An efficient finite map from (byte)strings to values.
                .
                The implementation is based on big-endian patricia
                trees, like "Data.IntMap". We first trie on the
                elements of "Data.ByteString" and then trie on the
                big-endian bit representation of those elements.
                Patricia trees have efficient algorithms for union
                and other merging operations, but they're also quick
                for lookups and insertions.
                .
                If you are only interested in being able to associate
                strings to values, then you may prefer the @hashmap@
                package which is faster for those only needing a
                map-like structure. This package is intended for
                those who need the extra capabilities that a trie-like
                structure can offer (e.g., structure sharing to
                reduce memory costs for highly redundant keys,
                taking the submap of all keys with a given prefix,
                contextual mapping, extracting the minimum and
                maximum keys, etc.)


Extra-source-files:
    AUTHORS, VERSION
Source-Repository head
    Type:     git
    Location: git@github.com:netom/bytestring-trie.git

Flag useCinternal
    Default:     False
    Description: Use optimized C implementation for indexOfDifference.
                 See notes in Data.Trie.ByteStringInternal.

Library
    Hs-Source-Dirs:  src
    Build-Depends:   base >= 4 && < 5
                   , binary
                   , bytestring
    Exposed-Modules: Data.Trie
                   , Data.Trie.Internal
                   , Data.Trie.Convenience
    Other-Modules:   Data.Trie.BitTwiddle
                   , Data.Trie.ByteStringInternal
                   , Data.Trie.Errors

    if flag(useCinternal)
        C-Sources:     src/Data/Trie/ByteStringInternal/indexOfDifference.c
        CC-Options:    -O3
        Cpp-Options:   -D__USE_C_INTERNAL__
